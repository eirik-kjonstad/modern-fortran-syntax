%YAML 1.2
---
#
# Modern Fortran syntax - Sublime Text syntax highlighting for modern Fortran code
#
# Copyright (c) 2020-2021 by the authors
#
name: Fortran (fixed-format)
file_extensions: [F77,F]
scope: source.fortran
extends: fortran-modern.sublime-syntax
version: 4

contexts:
  comments:
    - meta_append: true
    - match: '(?i)(^C|^\*|!)(?![$])'
      scope: punctuation.definition.comment.fortran
      push:
      - meta_scope: comment.line.fortran
      - match: \n
        pop: true

  control:
    - meta_prepend: true
    - match: '(?i)(continue)'
      scope: keyword.control.fortran
    - match: '(?i)(goto)'
      scope: keyword.control.fortran
      push:
        - include: eol-pop
        - include: comments
        - match: '(\d+)'
          scope: entity.name.label.statement-number.fortran
    - match: '^     (\S)'
      scope: punctuation.separator.continuation.fortran
    - match: '(?i){{firstOnLine}}(\d+)'
      scope: entity.name.label.statement-number.fortran
    - match: '(?i){{firstOnLine}}(do)\s+(?:(\d+))?'
      captures:
        1: keyword.control.fortran
        2: entity.name.label.statement-number.fortran

  types:
    - meta_append: true
    - match: '(?i){{firstOnLine}}\b{{intrinsicType}}(?=\s*\*)' # type declaration
      scope: storage.type.intrinsic.fortran
    - match: '(?i){{firstOnLine}}\b(data)\b'
      scope: storage.type.intrinsic.fortran

  line-continuation:
    - meta_prepend: true
    - match: '^     (\S)'
      scope: punctuation.separator.continuation.fortran

  operators:
    - meta_prepend: true
    - match: '^     (\S)'
      scope: punctuation.separator.continuation.fortran

  procedures:
    - meta_prepend: true
    - match: (?i)\b(function)\b
      scope: meta.function.declaration.fortran
      captures:
         1: keyword.declaration.function.fortran
      push:
        - meta_content_scope: meta.function.declaration.fortran
        - include: line-continuation
        - include: eol-pop
        - match: \w+
          scope: entity.name.function.fortran
        - match: \(
          scope: punctuation.section.parens.begin.fortran
          push:
          - clear_scopes: 1
          - meta_scope: meta.function.parameters.fortran
          - include: line-continuation
          - match: \w+
            scope: variable.parameter.input.fortran
          - match: \,
            scope: punctuation.separator.comma.fortran
          - match: \)
            scope: punctuation.section.parens.end.fortran
            set:
              - include: line-continuation
              - include: eol-pop
              - match: (?i)\bresult\b
                scope: keyword.control.function-result.fortran
              - match: (?=\()
                set:
                  - clear_scopes: 1
                  - match: \(
                    scope: punctuation.section.parens.begin.fortran
                    set:
                      - clear_scopes: 1
                      - meta_scope: meta.function.parameters.fortran
                      - include: line-continuation
                      - match: \w+
                        scope: variable.parameter.output.fortran
                      - match: \,
                        scope: punctuation.separator.comma.fortran
                      - match: \)
                        scope: punctuation.section.parens.end.fortran
                        pop: true

    - match: (?i)\b(subroutine)\b
      captures:
        1: keyword.declaration.function.fortran
      push:
        - meta_scope: meta.function.declaration.fortran
        - include: line-continuation
        - include: eol-pop
        - match: \w+
          scope: entity.name.function.fortran
        - match: \(
          scope: punctuation.section.parens.begin.fortran
          push:
            - clear_scopes: 1
            - meta_scope: meta.function.parameters.fortran
            - include: line-continuation
            - match: \w+
              scope: variable.parameter.fortran
            - match: \,
              scope: punctuation.separator.comma.fortran
            - match: \)
              scope: punctuation.section.parens.end.fortran
              pop: true
